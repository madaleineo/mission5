// <auto-generated />
using FilmCollectionMission4.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FilmCollectionMission4.Migrations
{
    [DbContext(typeof(MovieInfo))]
    [Migration("20220203042530_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.22");

            modelBuilder.Entity("FilmCollectionMission4.Models.ApplicationResponse", b =>
                {
                    b.Property<int>("MovieID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DirectorFirst")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DirectorLast")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Edited")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LentTo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT")
                        .HasMaxLength(25);

                    b.Property<string>("Rating")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("MovieID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Responses");

                    b.HasData(
                        new
                        {
                            MovieID = 1,
                            CategoryID = 1,
                            DirectorFirst = "Joe",
                            DirectorLast = "Johnston",
                            Edited = false,
                            LentTo = "",
                            Notes = "",
                            Rating = "PG-13",
                            Title = "Captain America: The First Avenger",
                            Year = 2011
                        },
                        new
                        {
                            MovieID = 2,
                            CategoryID = 1,
                            DirectorFirst = "Joe",
                            DirectorLast = "Russo",
                            Edited = false,
                            LentTo = "",
                            Notes = "",
                            Rating = "PG-13",
                            Title = "Captain America: Civil War",
                            Year = 2016
                        },
                        new
                        {
                            MovieID = 3,
                            CategoryID = 1,
                            DirectorFirst = "Joe",
                            DirectorLast = "Russo",
                            Edited = false,
                            LentTo = "",
                            Notes = "",
                            Rating = "PG-13",
                            Title = "Captain America: Winter Soldier",
                            Year = 2014
                        });
                });

            modelBuilder.Entity("FilmCollectionMission4.Models.CategoryList", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .HasColumnType("TEXT");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryID = 1,
                            Category = "Action/Adventure"
                        },
                        new
                        {
                            CategoryID = 2,
                            Category = "Comedy"
                        },
                        new
                        {
                            CategoryID = 3,
                            Category = "Drama"
                        },
                        new
                        {
                            CategoryID = 4,
                            Category = "Family"
                        },
                        new
                        {
                            CategoryID = 5,
                            Category = "Horror/Suspense"
                        },
                        new
                        {
                            CategoryID = 6,
                            Category = "Miscellaneous"
                        },
                        new
                        {
                            CategoryID = 7,
                            Category = "Television"
                        },
                        new
                        {
                            CategoryID = 8,
                            Category = "VHS"
                        });
                });

            modelBuilder.Entity("FilmCollectionMission4.Models.ApplicationResponse", b =>
                {
                    b.HasOne("FilmCollectionMission4.Models.CategoryList", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
